labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
mopop3 <- get_acs(geography = "county",
state = "MO",
county ="Boone",
product = "characteristics",
breakdown = c("SEX", "AGEGROUP"),
breakdown_labels = TRUE,
year = 2021)
ggplot(malepop1_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .001, suffix = "k")(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(malepop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .001)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
mopop2_filtered <- filter(mopop2, str_detect(AGEGROUP, "^Age"),
SEX !="Both sexes") %>%
mutate(value = ifelse(SEX =="Male", -value, value))
ggplot(malepop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .001)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .001)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .01)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = 1)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
View(mopop2_filtered)
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = 0)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = 0.000001)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = 1000)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = 1)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ number_format(scale = .01)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 10000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 100000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 99000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 90000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 100000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .001)(abs(.x)), limits = 100000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 100000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .01)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .001)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = .1)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = 1)(abs(.x)), limits = 140000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
ggplot(mopop2_filtered, aes(x = value, y = AGEGROUP, fill = SEX)) +
geom_col() +
theme_minimal(base_family = "Helvetica",
base_size = 12) +
scale_x_continuous(labels = ~ comma_format(scale = 1)(abs(.x)), limits = 20000 * c(-1,1)) +
scale_y_discrete(labels = ~ str_remove_all(.x, "Age\\s|\\syears")) +
labs(x = "",
y = "2019 Census Bureau population estimate",
title = "Population Pyramid of Boone County, Missouri",
fill = "",
caption = "Source: US Census Bureau population estimates")
library(tidyverse)
library(rvest)
library(janitor)
url <- "https://www.como.gov/CMS/911dispatch/police.php"
url <- "https://www.como.gov/CMS/911dispatch/police.php"
read_html(url)
html <- read_html(url)
View(html)
html %>% html_element("table")
html %>% html_element("table") %>% html_table()
html %>% html_element("table") %>% html_table() %>% clean_names()
url2 <- "https://www.como.gov/CMS/911dispatch/police.php?Start_Date=2022-11-12&End_Date=2022-11-13"
html2 <- read_html(url2)
url2 <- "https://www.como.gov/CMS/911dispatch/police.php?Start_Date=2022-11-12&End_Date=2022-11-13&Sumbit=Filter"
html2 <- read_html(url2)
html2 %>% html_element("table") %>% html_table() %>% clean_names()
url2 <- "https://www.como.gov/CMS/911dispatch/police.php?Start_Date=2022-11-12&End_Date=2022-11-13&Sumbit=Filter&offset=25"
html2 <- read_html(url2)
html2 %>% html_element("table") %>% html_table() %>% clean_names()
for (o in offsets){
url <- paste0(url3,o)
print(url3)
}
offsets <- seq(from=0, to=375, by=25)
for (o in offsets){
url <- paste0(url3,o)
print(url3)
}
for (o in offsets){
url <- paste0(url2,o)
print(url3)
}
for (o in offsets){
url3 <- paste0(url2,o)
print(url3)
}
url2 <- "https://www.como.gov/CMS/911dispatch/police.php?Start_Date=2022-11-12&End_Date=2022-11-13&Sumbit=Filter&offset="
offsets <- seq(from=0, to=375, by=25)
for (o in offsets){
url3 <- paste0(url2,o)
print(url3)
}
for (o in offsets){
url3 <- paste0(url2,o)
htnml3 <- read_html(url3)
tbl3 <- html3 %>% html_element("table") %>% html_table() %>% clean_names()
}
for (o in offsets){
url3 <- paste0(url2,o)
html3 <- read_html(url3)
tbl3 <- html3 %>% html_element("table") %>% html_table() %>% clean_names()
}
master_data <- NULL
master_data <- rbind(master_data, tbl13)
master_data <- NULL
for (o in offsets[1:2]){
url3 <- paste0(url2,o)
html3 <- read_html(url3)
tbl3 <- html3 %>% html_element("table") %>% html_table() %>% clean_names()
master_data <- rbind(master_data, tbl13)
}
for (o in offsets[1:2]){
url3 <- paste0(url2,o)
html3 <- read_html(url3)
tbl3 <- html3 %>% html_element("table") %>% html_table() %>% clean_names()
master_data <- rbind(master_data, tbl3)
}
View(master_data)
for (o in offsets){
url3 <- paste0(url2,o)
html3 <- read_html(url3)
tbl3 <- html3 %>% html_element("table") %>% html_table() %>% clean_names()
master_data <- rbind(master_data, tbl3)
Sys.sleep(1)
}
View(master_data)
`mo-adair_county` <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
View(`mo-adair_county`)
library(tidyverse)
> View(`mo-adair_county`)
mo-adair_county <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
mo-adair_county <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
View(`mo-adair_county`)
mo-adair_county <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
mo-adair_county <- loadRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
`mo-adair_county` <- loadRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
`mo-adair_county` <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
adair <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
View(adair)
adair %>% count(state)
adair %>% count(state) %>% arrange(desc(n))
adair %>% min(adair$booking_date)
help
adair %>% count(booking_date)
library(tidyverse)
adair <- readRDS("~/Desktop/school stuff/fall semester 2023/journ 4508/mo-adair_county.rds")
adair %>% count(booking_date)
adair %>% arrange(desc(booking_date
))
adair %>% arrange(booking_date)
min(adair$booking_date, na.rm = TRUE)
max(adair$booking_date, na.rm = TRUE)
adair %>% count(charge)
adair %>% count(charge) %>% arrange(desc(n))
n_distinct(adair$booking_id)
adair %>%
filter(ftp) %>%
select(charge)
adair %>%
filter(any_ftp, ! ftp) %>%
select(charge, booking_id)
adair %>%
filter(all_ftp) %>%
with(n_distinct(booking_id))
adair %>%
filter(all_ftp)
clay <- read_csv("Desktop/projects/misc data/misc-data/mo-clay_county.csv")
clay %>% filter(all_ftp)
clay %>% filter(all_ftp) %>% with(n_distinct(booking_id))
clay %>%
group_by(year = year(booking_date)) %>%
summarize(n_ftp_bookings = n_distinct(booking_id))
clayftp <- filter(clay, all_ftp)
clayftp %>%
group_by(year = year(booking_date)) %>%
summarize(n_ftp_bookings = n_distinct(booking_id))
clayftp %>%
distinct(booking_id, length_of_stay) %>%
ggplot(aes(x = length_of_stay)) +
geom_histogram() +
labs(
x = "Length of stay (days)",
y = "Number of bookings",
title = "Clay County"
) +
theme_bw()
View(adair)
adair %>%
distinct(booking_id, length_of_stay) %>%
ggplot(aes(x = length_of_stay)) +
geom_histogram() +
labs(
x = "Length of stay (days)",
y = "Number of bookings",
title = "Clay County"
) +
theme_bw()
adair %>%
distinct(booking_id, length_of_stay) %>%
ggplot(aes(x = length_of_stay)) +
geom_histogram() +
labs(
x = "Length of stay (days)",
y = "Number of bookings",
title = "Adair County"
) +
theme_bw()
library(tidyverse)
epa <- read.table("~Desktop/projects/misc data/misc-data/EPest_county_estimates_2019.txt")
epa <- read.table("~/Desktop/projects/misc data/misc-data/EPest_county_estimates_2019.txt")
epa <- read.table(file = "~/Desktop/projects/misc data/misc-data/EPest_county_estimates_2019.txt")
epa <- read.table(file = "~/Desktop/projects/misc data/misc-data/EPest_county_estimates_2019.txt")
library(tidyverse)
dates <- read_csv("~/Desktop/school stuff/fall semester 2023/journ 4508/dates-wage-compression.csv")
wages <- read_csv("~/Desktop/school stuff/fall semester 2023/journ 4508/wages-wage-compression.csv")
View(dates)
dates_wages <- inner_join(dates, wages, by = "Full Name")
View(dates_wages)
dates_wages <- full_join(dates, wages, by = "Full Name")
dates_wages <- inner_join(dates, wages, by = "Full Name")
dates_wages <- inner_join(dates, wages, by = "Full Name", keep = TRUE)
dates_wages <- inner_join(dates, wages, by = "Full Name")
dates_wages <- inner_join(dates, wages, by = "Full Name")
View(dates_wages)
dates_wages <- left_join(dates, wages, by = "Full Name")
View(wages)
write.csv(dates_wages, "fullwagecompression.csv")
dates_wages <- mutate(service-date("Service Date-when they started"))
dates_wages <- rename(service-date("Service Date-when they started"))
dates_wages <- mutate(keep = c("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change"))
dates_wages <- rename(keep = c("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change"))
dates_wages <- select(keep = c("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change"))
dates_wages <- select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change"))
dates_wages <- select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change")
dates_wages %>%  select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change")
dates_wages %>%  select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification start date -- current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change")
dates_wages %>%  select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification Start Date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change")
dates_wages <- dates_wages %>%  select("Full Name", "Job Class Code Desc", "Service Date-when they started", "Classification Start Date - current position start date", "Current Hourly Rate", "Final Proposed Hourly Rate","Percent Change")
write.csv(dates_wages, "fullwagecompression.csv")
View(dates_wages)
library(tidyverse)
library(jsonlite)
data <- fromJSON("https://data.covidactnow.org/snapshot/4826/v2/state/MO.timeseries.json")
head(data)
names(data) <- make.names(names(data))
head(data)
View(data)
view(data)
data[["actuals"]][["hospitalBeds"]]
View(data[["riskLevelsTimeseries"]])
View(data[["metricsTimeseries"]])
View(data[["actualsTimeseries"]])
View(data[["actualsTimeseries"]][["hospitalBeds"]])
View(data[["metricsTimeseries"]])
library(cfbfastr)
library(cfbfastR)
remotes::install_github(repo = "sportsdataverse/cfbfastR")
install_github(repo = "sportsdataverse/cfbfastR")
data[["metricsTimeseries"]][["weeklyCovidAdmissionsPer100k"]]
install.packages('remotes')
remotes::install_github(repo = "sportsdataverse/cfbfastR")
remotes::install_github(repo = "sportsdataverse/cfbfastR")
remotes::install_github(repo = "Kazink36/cfbplotR")
library(tidyverse)
setwd("/Users/ellielin/Desktop/projects/ellie-lin.io")
install.packages(blogdown)
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
library(blogdown)
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
library(blogdown)
library(blogdown)
library(blogdown)
